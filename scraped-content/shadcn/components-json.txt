Title: components.json - shadcn/ui
URL: https://ui.shadcn.com/docs/components-json

Getting Started
Introduction
Installation
components.json
Theming
Dark mode
CLI
Monorepo
New
Next.js 15 + React 19
Typography
Open in v0
Figma
Changelog
Installation
Next.js
Vite
Remix
Astro
Laravel
Gatsby
Manual
Components
Accordion
Alert
Alert Dialog
Aspect Ratio
Avatar
Badge
Breadcrumb
Button
Calendar
Card
Carousel
Chart
Checkbox
Collapsible
Combobox
Command
Context Menu
Data Table
Date Picker
Dialog
Drawer
Dropdown Menu
Form
Hover Card
Input
Input OTP
Label
Menubar
Navigation Menu
Pagination
Popover
Progress
Radio Group
Resizable
Scroll Area
Select
Separator
Sheet
Sidebar
Skeleton
Slider
Sonner
Switch
Table
Tabs
Textarea
Toast
Toggle
Toggle Group
Tooltip
Docs
components.json
components.json
Configuration for your project.
The components.json file holds configuration for your project.
We use it to understand how your project is set up and how to generate components customized for your project.
Note: The components.json file is optional and only required if you're using the CLI to add components to your project. If you're using the copy and paste method, you don't need this file.
You can create a components.json file in your project by running the following command:
pnpm
npm
yarn
bun
pnpm dlx shadcn@latest init
Copy
See the CLI section for more information.
$schema
You can see the JSON Schema for components.json here.
components.json
{
"$schema": "https://ui.shadcn.com/schema.json"
}
Copy
style
The style for your components. This cannot be changed after initialization.
components.json
{
"style": "default" | "new-york"
}
Copy
Preview
Code
Style:
New York
Copy
Create project
Deploy your new project in one-click.
Name
Framework
Select
Next.js
SvelteKit
Astro
Nuxt.js
Cancel
Deploy
tailwind
Configuration to help the CLI understand how Tailwind CSS is set up in your project.
See the installation section for how to set up Tailwind CSS.
tailwind.config
Path to where your tailwind.config.js file is located.
components.json
{
"tailwind": {
"config": "tailwind.config.js" | "tailwind.config.ts"
}
}
Copy
tailwind.css
Path to the CSS file that imports Tailwind CSS into your project.
components.json
{
"tailwind": {
"css": "styles/global.css"
}
}
Copy
tailwind.baseColor
This is used to generate the default color palette for your components. This cannot be changed after initialization.
components.json
{
"tailwind": {
"baseColor": "gray" | "neutral" | "slate" | "stone" | "zinc"
}
}
Copy
tailwind.cssVariables
You can choose between using CSS variables or Tailwind CSS utility classes for theming.
To use utility classes for theming set tailwind.cssVariables to false. For CSS variables, set tailwind.cssVariables to true.
components.json
{
"tailwind": {
"cssVariables": `true` | `false`
}
}
Copy
For more information, see the theming docs.
This cannot be changed after initialization. To switch between CSS variables and utility classes, you'll have to delete and re-install your components.
tailwind.prefix
The prefix to use for your Tailwind CSS utility classes. Components will be added with this prefix.
components.json
{
"tailwind": {
"prefix": "tw-"
}
}
Copy
rsc
Whether or not to enable support for React Server Components.
The CLI automatically adds a use client directive to client components when set to true.
components.json
{
"rsc": `true` | `false`
}
Copy
tsx
Choose between TypeScript or JavaScript components.
Setting this option to false allows components to be added as JavaScript with the .jsx file extension.
components.json
{
"tsx": `true` | `false`
}
Copy
aliases
The CLI uses these values and the paths config from your tsconfig.json or jsconfig.json file to place generated components in the correct location.
Path aliases have to be set up in your tsconfig.json or jsconfig.json file.
Important: If you're using the src directory, make sure it is included under paths in your tsconfig.json or jsconfig.json file.
aliases.utils
Import alias for your utility functions.
components.json
{
"aliases": {
"utils": "@/lib/utils"
}
}
Copy
aliases.components
Import alias for your components.
components.json
{
"aliases": {
"components": "@/components"
}
}
Copy
aliases.ui
Import alias for ui components.
The CLI will use the aliases.ui value to determine where to place your ui components. Use this config if you want to customize the installation directory for your ui components.
components.json
{
"aliases": {
"ui": "@/app/ui"
}
}
Copy
aliases.lib
Import alias for lib functions such as format-date or generate-id.
components.json
{
"aliases": {
"lib": "@/lib"
}
}
Copy
aliases.hooks
Import alias for hooks such as use-media-query or use-toast.
components.json
{
"aliases": {
"hooks": "@/hooks"
}
}
Copy
Installation
Theming
On This Page
$schema
style
tailwind
tailwind.config
tailwind.css
tailwind.baseColor
tailwind.cssVariables
tailwind.prefix
rsc
tsx
aliases
aliases.utils
aliases.components
aliases.ui
aliases.lib
aliases.hooks
Bring your app built with shadcn to life on Vercel
Trusted by OpenAI, Sonos, Chick-fil-A, and more.
Vercel provides tools and infrastructure to deploy apps and features at scale.
Deploy Now
Deploy to Vercel